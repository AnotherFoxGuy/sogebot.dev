diff --git a/node_modules/@twurple/eventsub-ws/es/EventSubWsListener.mjs b/node_modules/@twurple/eventsub-ws/es/EventSubWsListener.mjs
index c86253d..0f2da5b 100644
--- a/node_modules/@twurple/eventsub-ws/es/EventSubWsListener.mjs
+++ b/node_modules/@twurple/eventsub-ws/es/EventSubWsListener.mjs
@@ -38,7 +38,7 @@ let EventSubWsListener = class EventSubWsListener extends EventSubBase {
          * @param error The error that caused the disconnection, or `undefined` for a clean disconnect.
          */
         this.onUserSocketDisconnect = this.registerEvent();
-        this._initialUrl = (_a = config.url) !== null && _a !== void 0 ? _a : 'wss://eventsub-beta.wss.twitch.tv/ws';
+        this._initialUrl = (_a = config.url) !== null && _a !== void 0 ? _a : 'wss://eventsub.wss.twitch.tv/ws';
         this._loggerOptions = config.logger;
     }
     /**
diff --git a/node_modules/@twurple/eventsub-ws/lib/EventSubWsListener.js b/node_modules/@twurple/eventsub-ws/lib/EventSubWsListener.js
index 1bb20f1..53f44aa 100644
--- a/node_modules/@twurple/eventsub-ws/lib/EventSubWsListener.js
+++ b/node_modules/@twurple/eventsub-ws/lib/EventSubWsListener.js
@@ -41,7 +41,7 @@ let EventSubWsListener = class EventSubWsListener extends eventsub_base_1.EventS
          * @param error The error that caused the disconnection, or `undefined` for a clean disconnect.
          */
         this.onUserSocketDisconnect = this.registerEvent();
-        this._initialUrl = (_a = config.url) !== null && _a !== void 0 ? _a : 'wss://eventsub-beta.wss.twitch.tv/ws';
+        this._initialUrl = (_a = config.url) !== null && _a !== void 0 ? _a : 'wss://eventsub.wss.twitch.tv/ws';
         this._loggerOptions = config.logger;
     }
     /**
diff --git a/node_modules/@twurple/eventsub-ws/lib/EventSubWsSocket.js b/node_modules/@twurple/eventsub-ws/lib/EventSubWsSocket.js
index 0b62ac0..bf4a37e 100644
--- a/node_modules/@twurple/eventsub-ws/lib/EventSubWsSocket.js
+++ b/node_modules/@twurple/eventsub-ws/lib/EventSubWsSocket.js
@@ -107,6 +107,7 @@ class EventSubWsSocket {
         this._connection.connect();
     }
     stop() {
+        this._logger.debug(`Stopping connection`);
         this._connection.disconnect();
     }
     get readyToSubscribe() {
@@ -120,9 +121,11 @@ class EventSubWsSocket {
     }
     _initializeKeepaliveTimeout(timeoutInSeconds) {
         this._keepaliveTimeout = timeoutInSeconds;
+        this._logger.debug(`Restarting keepalive timeout`);
         this._restartKeepaliveTimer();
     }
     _clearKeepaliveTimer() {
+        this._logger.debug(`Clearing keepalive timer`);
         if (this._keepaliveTimer) {
             clearTimeout(this._keepaliveTimer);
             this._keepaliveTimer = null;
@@ -132,11 +135,13 @@ class EventSubWsSocket {
         this._clearKeepaliveTimer();
         if (this._keepaliveTimeout) {
             // 1200 instead of 1000 to allow for a little more leeway than Twitch wants to give us
+            this._logger.debug(`setting keepaliveTimer to ${this._keepaliveTimeout * 1200}`);
             this._keepaliveTimer = setTimeout(() => this._handleKeepaliveTimeout(), this._keepaliveTimeout * 1200);
         }
     }
     _handleKeepaliveTimeout() {
         this._keepaliveTimer = null;
+        this._logger.debug(`Assumed external disconnect`);
         this._connection.assumeExternalDisconnect();
     }
 }
